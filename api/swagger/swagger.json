{
  "openapi": "3.0.1",
  "info": {
    "title": "User API",
    "description": "This is a sample User API created with Express.js. You can find more about it [here](https://github.com/kasramp/sample-rest-with-expressjs).",
    "contact": {
      "email": "clement.legouest@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Operations about users"
    },
    {
      "name": "Caves",
      "description": "Operations about cellars"
    },
    {
      "name": "Bottles",
      "description": "Operations about bottles"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a user with an unique e-mail",
        "operationId": "postSignup",
        "requestBody": {
          "description": "User email and password as JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The new registered user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log a user with e-mail password",
        "operationId": "postLogin",
        "requestBody": {
          "description": "User email and password as JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/cellar": {
      "post": {
        "tags": [
          "Caves"
        ],
        "summary": "Créé une cave",
        "operationId": "postCellar",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellarDto",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Caves"
        ],
        "summary": "Returns all cellars as a list",
        "operationId": "getCellars",
        "responses": {
          "200": {
            "description": "A list of cellars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cellar",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cellar/{id}": {
      "get": {
        "tags": [
          "Caves"
        ],
        "summary": "Returns one cellar",
        "parameters": {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Text ID of the cellar to get"
        },
        "operationId": "getOneCellar",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cellar",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/bottle": {
      "get": {
        "tags": [
          "Bouteilles"
        ],
        "summary": "Récupère une liste de bouteilles",
        "operationId": "getBottles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bottle",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bouteilles"
        ],
        "summary": "Créer une bouteille",
        "operationId": "createBottle",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BottleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Bottle created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bottle"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserDto": {
        "Type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CellarDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "BottleDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int64"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "User": {
        "Type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Cellar": {
        "Type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "zones": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "Zone": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Bottle": {
        "Type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int64"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}